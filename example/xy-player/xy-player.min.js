let player;const SEASONS=[],EPISODES=[],ISSUES=[],SUBTITLES=[],topControlBar=document.querySelector(".top-control-bar");let seasonSelector,episodeSelector,reportButton,closeReportButton,reportForm,formSended,reportSubmitButton;function XYPlayerStart(e){player=e,player.ready((function(){player.hlsQualitySelector()})),player.on("userinactive",hideTopControlBar),player.on("useractive",showTopControlBar),player.on("play",(()=>{topControlBar.classList.add("visible")}))}function resetControls(){loadSelectors().then((()=>{loadSeason(seasonSelector.value)})),createReportElements()}function getSeasons(){return SEASONS}function getEpisodes(){return EPISODES}function getIssues(){return ISSUES}function getSubtitles(){return SUBTITLES}function removeSubtitleByID(e){const t=SUBTITLES.findIndex((t=>t.subtitlesID===e));-1!==t&&SUBTITLES.splice(t,1)}function removeIssueByID(e){const t=ISSUES.findIndex((t=>t.id===e));-1!==t&&ISSUES.splice(t,1)}function removeSeasonByID(e){const t=SEASONS.findIndex((t=>t.seasonID===e));-1!==t&&SEASONS.splice(t,1)}function removeEpisodeByID(e){const t=EPISODES.findIndex((t=>t.episodeID===e));-1!==t&&EPISODES.splice(t,1)}function removeSubtitle(e){SUBTITLES.splice(e,1)}function removeIssue(e){ISSUES.splice(e,1)}function removeSeason(e){SEASONS.splice(e,1)}function removeEpisode(e){EPISODES.splice(e,1)}function addSubtitle(e,t,o,n,r,s){SUBTITLES.push({episodeID:e,seasonID:t,subtitlesID:o,location:n,lang:r,label:s})}function addIssue(e,t,o){ISSUES.push({issueID:e,value:t,label:o})}function addSeason(e,t){SEASONS.push({seasonID:e,textContent:t})}function addEpisode(e,t,o,n){EPISODES.push({episodeID:e,textContent:t,seasonID:o,location:n})}function loadSeason(e){parseEpisodes(e).then((()=>{var t=episodeSelector.value;loadEpisode(e,t)})).catch((e=>{console.error("Error while loading season: "+e)}))}function parseEpisodes(e){return new Promise((t=>{episodeSelector.innerHTML="",EPISODES.forEach((t=>{if(t.seasonID!=e)return;let o=document.createElement("option");o.value=t.episodeID,o.textContent=t.textContent,episodeSelector.appendChild(o)})),t()}))}function loadEpisode(e,t){EPISODES.forEach((o=>{o.seasonID==e&&o.episodeID==t&&(setSource(o.location),loadSubtitles(o.episodeID,o.seasonID))}))}function setSource(e){player.src({src:e,type:"application/x-mpegURL"})}function toggleReportForm(){reportForm.classList.contains("hidden")?reportForm.classList.remove("hidden"):reportForm.classList.add("hidden")}function showTopControlBar(){topControlBar.classList.add("visible")}function hideTopControlBar(){topControlBar.classList.remove("visible")}function fadeOut(e){let t=1,o=setInterval((()=>{if(t<=0)return clearInterval(o),void(e.style.opacity=0);t-=.025,e.style.opacity=t}),50)}function loadSubtitles(e,t){player.remoteTextTracks().tracks_.forEach((e=>{player.removeRemoteTextTrack(e)})),SUBTITLES.forEach((o=>{o.episodeID==e&&o.seasonID==t&&setSubtitles(o.location,o.lang,o.label)}))}function setSubtitles(e,t,o){player.addRemoteTextTrack({kind:"subtitle",src:e,srclang:t,label:o},!1)}function loadSelectors(){return new Promise((e=>{for(;topControlBar.firstChild;)topControlBar.removeChild(topControlBar.firstChild);const t=document.createElement("div");t.classList.add("control-bar-upper-left-side");const o=document.createElement("div");o.classList.add("control-bar-upper-right-side");const n=document.createElement("section");n.classList.add("select-season-episode"),seasonSelector=document.createElement("select"),seasonSelector.id="season-selector",seasonSelector.name="Season",seasonSelector.addEventListener("change",(()=>{loadSeason(seasonSelector.value)})),SEASONS.forEach((e=>{const t=document.createElement("option");t.value=e.seasonID,t.textContent=e.textContent,seasonSelector.appendChild(t)})),n.appendChild(seasonSelector);const r=document.createElement("section");r.classList.add("select-season-episode"),episodeSelector=document.createElement("select"),episodeSelector.id="episode-selector",episodeSelector.name="Episode",episodeSelector.addEventListener("change",(()=>{loadEpisode(seasonSelector.value,episodeSelector.value)})),r.appendChild(episodeSelector),t.appendChild(n),t.appendChild(r),reportButton=document.createElement("button"),reportButton.classList.add("report-button"),reportButton.setAttribute("aria-label","Report Issue"),reportButton.addEventListener("click",(()=>{toggleReportForm()}));const s=document.createElement("i");s.classList.add("fa-solid","fa-triangle-exclamation"),reportButton.appendChild(s),o.appendChild(reportButton),topControlBar.appendChild(t),topControlBar.appendChild(o),e()}))}function createReportElements(){const e=document.querySelector(".report-container");for(;e.firstChild;)e.removeChild(e.firstChild);formSended=document.createElement("div"),formSended.classList.add("form-sended"),formSended.innerHTML='\n        <i class="fa-solid fa-check"></i>\n        <span class="form-sended-text">Thank you for your report!<br>We will look into it when we would be able to</span>\n    ',reportForm=document.createElement("form"),reportForm.classList.add("report-form","hidden"),reportForm.addEventListener("submit",(e=>{e.preventDefault()}));const t=document.createElement("div");closeReportButton=document.createElement("button"),closeReportButton.classList.add("close-report-button"),closeReportButton.innerHTML='<i class="fa-solid fa-xmark"></i>',closeReportButton.addEventListener("click",(()=>{toggleReportForm()})),t.appendChild(closeReportButton),reportForm.appendChild(t),ISSUES.forEach((e=>{const t=document.createElement("div"),o=document.createElement("input");o.type="radio",o.id=e.issueID,o.name="issue-type",o.classList.add("form-radio-input"),o.value=e.value;const n=document.createElement("label");n.classList.add("form-label-radio"),n.htmlFor=e.issueID,n.textContent=e.label,t.appendChild(o),t.appendChild(n),reportForm.appendChild(t)}));const o=document.createElement("div");o.style.display="flex",o.style.flexDirection="column";const n=document.createElement("label");n.classList.add("form-label-description"),n.htmlFor="textarea-description",n.textContent="Describe your issue";const r=document.createElement("textarea");r.id="textarea-description",r.name="issue-description",r.classList.add("form-textarea"),r.maxLength=255,o.appendChild(n),o.appendChild(r);const s=document.createElement("div");s.style.display="flex",s.style.flexDirection="row-reverse",reportSubmitButton=document.createElement("button"),reportSubmitButton.setAttribute("aria-label","Submit report"),reportSubmitButton.classList.add("submit-form-button"),reportSubmitButton.type="submit",reportSubmitButton.innerHTML='<label class="submit-form-label">Submit</label>',reportSubmitButton.addEventListener("click",(()=>{reportForm.classList.add("hidden"),fadeOut(formSended)})),s.appendChild(reportSubmitButton),reportForm.appendChild(o),reportForm.appendChild(s),e.appendChild(formSended),e.appendChild(reportForm)}